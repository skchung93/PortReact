{"ast":null,"code":"var _jsxFileName = \"/Users/steven.chung/Desktop/Main Code/PortReact/src/components/NavTabs.js\";\nimport React from 'react'; // Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavTabs(_ref) {\n  let {\n    currentPage,\n    handlePageChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Steven Kim Chung\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav justify-content-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#home\",\n          onClick: () => handlePageChange('Home') // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          ,\n          className: currentPage === 'Home' ? 'nav-link active' : 'nav-link',\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#about\",\n          onClick: () => handlePageChange('About') // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === 'About' ? 'nav-link active' : 'nav-link',\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#blog\",\n          onClick: () => handlePageChange('Portfolio') // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === 'Blog' ? 'nav-link active' : 'nav-link',\n          children: \"Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#contact\",\n          onClick: () => handlePageChange('Contact') // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === 'Contact' ? 'nav-link active' : 'nav-link',\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NavTabs;\nexport default NavTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavTabs\");","map":{"version":3,"sources":["/Users/steven.chung/Desktop/Main Code/PortReact/src/components/NavTabs.js"],"names":["React","NavTabs","currentPage","handlePageChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;;;AACA,SAASC,OAAT,OAAoD;AAAA,MAAnC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAmC;AAClD,sBACE;AAAK,IAAA,SAAS,EAAG,QAAjB;AAAA,4BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,EAAE,MAAMA,gBAAgB,CAAC,MAAD,CAFjC,CAGE;AACA;AAJF;AAKE,UAAA,SAAS,EAAED,WAAW,KAAK,MAAhB,GAAyB,iBAAzB,GAA6C,UAL1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,OAAD,CAFjC,CAGE;AAHF;AAIE,UAAA,SAAS,EAAED,WAAW,KAAK,OAAhB,GAA0B,iBAA1B,GAA8C,UAJ3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF,eAsBE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,WAAD,CAFjC,CAGE;AAHF;AAIE,UAAA,SAAS,EAAED,WAAW,KAAK,MAAhB,GAAyB,iBAAzB,GAA6C,UAJ1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF,eAgCE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CAFjC,CAGE;AAHF;AAIE,UAAA,SAAS,EAAED,WAAW,KAAK,SAAhB,GAA4B,iBAA5B,GAAgD,UAJ7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;KAnDQD,O;AAqDT,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage, handlePageChange }) {\n  return (\n    <div className = \"parent\">\n    {/* <nav className = \"nav-tabs\"> */}\n    <h1>Steven Kim Chung</h1>\n    <ul className=\"nav justify-content-end\">\n      <li className=\"nav-item\">\n        <a\n          href=\"#home\"\n          onClick={() => handlePageChange('Home')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          className={currentPage === 'Home' ? 'nav-link active' : 'nav-link'}\n        >\n          Home\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#about\"\n          onClick={() => handlePageChange('About')}\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\n        >\n          About\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#blog\"\n          onClick={() => handlePageChange('Portfolio')}\n          // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Blog' ? 'nav-link active' : 'nav-link'}\n        >\n          Portfolio\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#contact\"\n          onClick={() => handlePageChange('Contact')}\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\n        >\n          Contact\n        </a>\n      </li>\n    </ul>\n    {/* </nav> */}\n    </div>\n  );\n}\n\nexport default NavTabs;\n"]},"metadata":{},"sourceType":"module"}